http://localhost:8088/api/graphql

mutation{
  modifyTable(action: Create){
    result
  }
}

query{
  listCases(status: Pending){
    id
    name
    status
  }
}

mutation{
  createCase(name: "Special Relativity", dateOfBirth: "1905-01-01"){
    result
  }
}

mutation{
  updateCase(id: "INSERT_UUID", status: Submitted){
    result
    caseId
  }
}

mutation{
  deleteCase(id: "INSERT_UUID"){
    result
    caseId
  }
}

ws://localhost:8088/ws/graphql

subscription {
  caseStatusChanged {
    id,
    status
  }
}

If the GraphQL [publisher] web service goes down or becomes unavailable,
   the GraphQL [subscriber] client simply stops receiving events.

Interestingly, an active subscription by an external client is necessary to see the tap effects.
If any events are published during a time without an active client subscription, the events get dropped (no buffering).
